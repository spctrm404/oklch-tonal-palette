$button-size: 3rem;
$drawer-button-py: 0.75rem;
$drawer-button-px: 0.25 * $button-size;
$drawer-w: 28rem;
$drawer-w-fold: $button-size + 2 * $drawer-button-px;
$menu-px: $drawer-button-px;
$duration: 200ms;
$easing: cubic-bezier(0.2, 0, 0, 1);
$transition: $duration $easing;

.grid {
  display: grid;
  grid-template-rows: $button-size + 2 * $drawer-button-py 1fr;
  grid-template-columns: $drawer-w-fold calc(100% - $drawer-w-fold);
  place-items: stretch stretch;
  width: 100%;
  height: 100dvh;
  transition: grid-template-columns $transition $duration;

  &:has(.drawer[data-opened]) {
    grid-template-columns: $drawer-w calc(100% - $drawer-w);
    transition: grid-template-columns $transition;
  }
}

.drawer {
  position: relative;
  z-index: 3;
  display: grid;
  grid-template-rows: subgrid;
  grid-template-columns: subgrid;
  grid-row: 1 / -1;
  grid-column: 1;
  place-items: stretch stretch;
  background-color: var(--surface-container-light);
  box-shadow: var(--shadow-0);
  transition: background-color $transition $duration,
    box-shadow $transition $duration;

  &[data-theme='dark'] {
    background-color: var(--surface-container-dark);
  }

  &[data-opened] {
    background-color: var(--surface-container-high-light);
    box-shadow: var(--shadow-3-light);
    transition: background-color $transition, box-shadow $transition;

    &[data-theme='dark'] {
      background-color: var(--surface-container-high-dark);
      box-shadow: var(--shadow-3-dark);
    }
  }

  &__button {
    display: grid;
    grid-row: 1;
    grid-column: 1;
    place-items: center end;
    padding-inline: $drawer-button-px;
  }

  &__scrollable {
    grid-row: 2;
    grid-column: 1;
    overflow: scroll;
    scrollbar-width: none;
  }
}

.controller {
  min-height: 100%;
  opacity: 0;
  transition: opacity $transition;

  @at-root .grid:has(.drawer[data-opened]) #{&} {
    opacity: 1;
    transition: opacity $transition $duration;
  }

  &__l-c {
    display: grid;
    place-items: stretch stretch;
    height: 15.5rem;
  }

  &__gamut-graph {
    grid-row: 1;
    grid-column: 1;
    place-self: center center;
    width: calc(100% - $button-size);
    height: calc(100% - $button-size);
  }

  &__xy-slider {
    grid-row: 1;
    grid-column: 1;
  }
}

.menu {
  position: relative;
  z-index: 2;
  display: grid;
  grid-row: 1;
  grid-column: 2;
  place-items: center end;
  padding-inline: $menu-px;
  background-color: var(--surface-container-light);
  transition: background-color $transition;

  &[data-theme='dark'] {
    background-color: var(--surface-container-dark);
  }
}

.main {
  position: relative;
  z-index: 1;
  display: grid;
  grid-row: 2;
  grid-column: 2;
  place-items: center stretch;
  overflow: scroll;
  background-color: var(--surface-container-low-light);
  scrollbar-width: none;
  transition: background-color $transition;

  &[data-theme='dark'] {
    background-color: var(--surface-container-low-dark);
  }
}

.palettes {
  display: grid;
  grid-auto-rows: auto;
  row-gap: 1rem;
  place-items: center stretch;
}
